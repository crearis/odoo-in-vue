<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Odoo In Vue</title>
    <link>https://www.odooinvue.org/</link>
    <description>Recent content on Odoo In Vue</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 26 Jan 2020 04:15:05 +0900</lastBuildDate>
    
	<atom:link href="https://www.odooinvue.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concepts</title>
      <link>https://www.odooinvue.org/doc/concepts/</link>
      <pubDate>Tue, 28 Jan 2020 00:38:51 +0900</pubDate>
      
      <guid>https://www.odooinvue.org/doc/concepts/</guid>
      <description>Inspiration for this project Whats so bad about QWeb? Using Qweb to develop your UX solution has some specific drawbacks:
 QWeb is still based on terse and bloated XML QWeb is complicated and has a big learning curve QWeb is specific to Odoo QWeb provides a small selection of standard UI widgets Odoo documentation sucks and the QWeb part of it is no exception Reactive design with QWeb still sucks and is still buggy QWeb is only targeted for browsers and for converting HTML to PDF Community support is tiny compared to the Vue community Lacks support for many modern paradigms and concepts available in Vue No browser plugins to help QWeb development No popular IDE plugin support Odoo Studio requires Enterprise Edition ($$$) Work done in Odoo Studio can&amp;rsquo;t be exported as .</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://www.odooinvue.org/doc/docker/</link>
      <pubDate>Sat, 11 Jan 2020 14:09:21 +0900</pubDate>
      
      <guid>https://www.odooinvue.org/doc/docker/</guid>
      <description>Starting backend services in Docker  If you are not an Odoo developer: The scripts in the /docker dir are only for getting the backend services running, including Odoo. Docker is not used to run the Quasar/Vue part of the project. Quasar provides a built-in server for running the Vue app. There is a script in /docker which provides a proxy server that will reverse proxy to Quasar&amp;rsquo;s built in server, but obviously for that to work, the Quasar server needs to be started from the command line (e.</description>
    </item>
    
    <item>
      <title>Odoo Development</title>
      <link>https://www.odooinvue.org/doc/development/</link>
      <pubDate>Sat, 11 Jan 2020 14:09:21 +0900</pubDate>
      
      <guid>https://www.odooinvue.org/doc/development/</guid>
      <description>Setup Basics Assumptions:
 You are a Python developer You have at least basic Odoo development knowledge You are using Ubuntu 18.04 for development (or similar)  Pre-requisites:
 Python setuptools - (sudo apt-get install python3-setuptools) Python wheel - (pip3 install wheel)    Get Odoo 13 one of 2 ways (choose just one, unless you know what you are doing):
 Clone the Odoo 13 source code to a directory of your choice.</description>
    </item>
    
    <item>
      <title>Vue Setup</title>
      <link>https://www.odooinvue.org/doc/quasar/</link>
      <pubDate>Sat, 11 Jan 2020 14:09:21 +0900</pubDate>
      
      <guid>https://www.odooinvue.org/doc/quasar/</guid>
      <description>About the Quasar/Vue project Using VueJS with Odoo is an established paradigm that we borrow from older projects in the public domain. The Quasar/Vue app in this project is obviously not meant to be complete since its just a functional sample that demonstrates how to use VueJS with Odoo as the backend.
Because the VueJS interface is built using Quasar .. the Quasar CLI is required.
The root directory for the Quasar/Vue project is /ui</description>
    </item>
    
  </channel>
</rss>